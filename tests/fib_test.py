__author__ = 'jgibbs'

import unittest
from fib_function import fib

fib_5k = ("38789684543883256337019163083259053120821277146462451061605972148955501390440370970"
          "10822916462210669479293452858882973813483102008954982940361430156911478938364216563"
          "94410691021450563413370655865623825465670071252592990385493381392883637834751890876"
          "29707120333370529231076930085180938498018038478139967488817655546537882916442689129"
          "80384613778969021502293082475666346224923071883324803280375039130352903304505842701"
          "14763524227021093463769910400671417488329842289149127310405432875329804427367682297"
          "72449877498745556919077038806370468327948113589737399931101062193081490185708153978"
          "54379195305617510761053075688783766033667355445258844886241619210553457493675897849"
          "02798823435102359984466393485325641195222185956306047536464547076033090242080638258"
          "49291564528762915757591423438091423029174910889841552098544324865940797935713168416"
          "92868039545309545388698114665082066862897420639323438488465240988742395873801976993"
          "82031717420893226546887936400263079778005875912967138963421425257911687275560036031"
          "1370547754724604639987588046985178408674382863125")


class MyTestCase(unittest.TestCase):
    def setUp(self):
        self.seq = [0, 1, 1, 2, 3, 5]

    def test_expected_results(self):
        result = fib(6)
        self.assertEqual(self.seq, result)

    def test_large_result(self):
        result = fib(5001)
        self.assertEqual(fib_5k, str(result[5000]))

    def test_negative_number(self):
        self.assertRaises(Exception, -5)

    def test_float(self):
        self.assertRaises(Exception, 3.14)

    def test_alpha(self):
        self.assertRaises(Exception, "foo")


if __name__ == '__main__':
    unittest.main()
